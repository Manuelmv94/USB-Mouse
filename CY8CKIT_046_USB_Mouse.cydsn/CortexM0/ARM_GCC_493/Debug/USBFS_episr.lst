ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"USBFS_episr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	USBFS_EP_1_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	USBFS_EP_1_ISR, %function
  23              	USBFS_EP_1_ISR:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\USBFS_episr.c"
   1:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC4/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC4/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC4/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC4/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC4/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC4/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC4/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC4/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC4/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC4/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC4/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC4/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC4/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  19:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC4/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC4/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC4/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC4/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC4/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  32:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************//**
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 2


  33:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC4/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  39:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC4/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  28              		.loc 1 55 0
  29 0000 0122     		mov	r2, #1
  30 0002 094B     		ldr	r3, .L3
  31 0004 1A60     		str	r2, [r3]
  56:.\Generated_Source\PSoC4/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  32              		.loc 1 66 0
  33 0006 094B     		ldr	r3, .L3+4
  34 0008 9B6C     		ldr	r3, [r3, #72]
  67:.\Generated_Source\PSoC4/USBFS_episr.c ****             
  68:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  35              		.loc 1 69 0
  36 000a 094B     		ldr	r3, .L3+8
  37 000c 1A7B     		ldrb	r2, [r3, #12]
  38 000e 0323     		mov	r3, #3
  39 0010 1340     		and	r3, r2
  40 0012 012B     		cmp	r3, #1
  41 0014 04D0     		beq	.L2
  70:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  42              		.loc 1 71 0
  43 0016 064A     		ldr	r2, .L3+8
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 3


  44 0018 D17B     		ldrb	r1, [r2, #15]
  45 001a 8023     		mov	r3, #128
  46 001c 4B40     		eor	r3, r1
  47 001e D373     		strb	r3, [r2, #15]
  48              	.L2:
  72:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  49              		.loc 1 80 0
  50 0020 0122     		mov	r2, #1
  51 0022 034B     		ldr	r3, .L3+8
  52 0024 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC4/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 104:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
  53              		.loc 1 107 0
  54              		@ sp needed
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 2C002C40 		.word	1076625452
  60 002c F0FF2B40 		.word	1076625392
  61 0030 00000000 		.word	USBFS_EP
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 4


  65              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBFS_EP_2_ISR
  68              		.code	16
  69              		.thumb_func
  70              		.type	USBFS_EP_2_ISR, %function
  71              	USBFS_EP_2_ISR:
  72              	.LFB3:
 108:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
 122:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  75              		.loc 1 137 0
  76 0000 0222     		mov	r2, #2
  77 0002 0A4B     		ldr	r3, .L7
  78 0004 1A60     		str	r2, [r3]
 138:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  79              		.loc 1 148 0
  80 0006 8823     		mov	r3, #136
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 5


  81 0008 094A     		ldr	r2, .L7+4
  82 000a D358     		ldr	r3, [r2, r3]
 149:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  83              		.loc 1 151 0
  84 000c 094B     		ldr	r3, .L7+8
  85 000e 1A7E     		ldrb	r2, [r3, #24]
  86 0010 0323     		mov	r3, #3
  87 0012 1340     		and	r3, r2
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 064A     		ldr	r2, .L7+8
  92 001a D17E     		ldrb	r1, [r2, #27]
  93 001c 8023     		mov	r3, #128
  94 001e 4B40     		eor	r3, r1
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		mov	r2, #1
  99 0024 034B     		ldr	r3, .L7+8
 100 0026 5A76     		strb	r2, [r3, #25]
 163:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC4/USBFS_episr.c ****         
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 6


 186:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 101              		.loc 1 189 0
 102              		@ sp needed
 103 0028 7047     		bx	lr
 104              	.L8:
 105 002a C046     		.align	2
 106              	.L7:
 107 002c 2C002C40 		.word	1076625452
 108 0030 F0FF2B40 		.word	1076625392
 109 0034 00000000 		.word	USBFS_EP
 110              		.cfi_endproc
 111              	.LFE3:
 112              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 113              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
 114              		.align	2
 115              		.global	USBFS_SOF_ISR
 116              		.code	16
 117              		.thumb_func
 118              		.type	USBFS_SOF_ISR, %function
 119              	USBFS_SOF_ISR:
 120              	.LFB4:
 190:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 193:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 7


 223:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 8


 280:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC4/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 9


 337:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC4/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 10


 394:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 421:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 448:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 11


 451:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 12


 508:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 516:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 13


 565:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC4/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 592:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 14


 622:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 15


 679:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 121              		.loc 1 694 0
 122              		.cfi_startproc
 695:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 123              		.loc 1 703 0
 124 0000 0122     		mov	r2, #1
 125 0002 014B     		ldr	r3, .L10
 126 0004 1A60     		str	r2, [r3]
 704:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 127              		.loc 1 708 0
 128              		@ sp needed
 129 0006 7047     		bx	lr
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 0008 20202C40 		.word	1076633632
 134              		.cfi_endproc
 135              	.LFE4:
 136              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 137              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 138              		.align	2
 139              		.global	USBFS_BUS_RESET_ISR
 140              		.code	16
 141              		.thumb_func
 142              		.type	USBFS_BUS_RESET_ISR, %function
 143              	USBFS_BUS_RESET_ISR:
 144              	.LFB5:
 709:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 16


 712:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC4/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC4/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC4/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC4/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC4/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC4/USBFS_episr.c **** {
 145              		.loc 1 723 0
 146              		.cfi_startproc
 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
 724:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 728:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 151              		.loc 1 732 0
 152 0002 0222     		mov	r2, #2
 153 0004 024B     		ldr	r3, .L13
 154 0006 1A60     		str	r2, [r3]
 733:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ReInitComponent();
 155              		.loc 1 734 0
 156 0008 FFF7FEFF 		bl	USBFS_ReInitComponent
 157              	.LVL0:
 735:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 736:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC4/USBFS_episr.c **** }
 158              		.loc 1 739 0
 159              		@ sp needed
 160 000c 08BD     		pop	{r3, pc}
 161              	.L14:
 162 000e C046     		.align	2
 163              	.L13:
 164 0010 20202C40 		.word	1076633632
 165              		.cfi_endproc
 166              	.LFE5:
 167              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 168              		.section	.text.USBFS_INTR_HI_ISR,"ax",%progbits
 169              		.align	2
 170              		.global	USBFS_INTR_HI_ISR
 171              		.code	16
 172              		.thumb_func
 173              		.type	USBFS_INTR_HI_ISR, %function
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 17


 174              	USBFS_INTR_HI_ISR:
 175              	.LFB7:
 740:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 742:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 743:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC4/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:.\Generated_Source\PSoC4/USBFS_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 748:.\Generated_Source\PSoC4/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 750:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 751:.\Generated_Source\PSoC4/USBFS_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC4/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:.\Generated_Source\PSoC4/USBFS_episr.c **** {
 754:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 764:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 766:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 768:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC4/USBFS_episr.c **** }
 772:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 774:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 775:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 780:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 782:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 783:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 786:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 arbIntrStatus;
 787:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 epStatus;
 788:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 ep = USBFS_EP1;
 789:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 790:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 794:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 18


 795:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 796:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 797:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 798:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC4/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 800:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 801:.\Generated_Source\PSoC4/USBFS_episr.c ****         while (0u != arbIntrStatus)
 802:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 803:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 805:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 806:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC4/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 808:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 809:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 811:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 812:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 813:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 814:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint32) ~USBFS_ARB_EPX_CFG_IN_DATA_RD
 816:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 817:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:.\Generated_Source\PSoC4/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:.\Generated_Source\PSoC4/USBFS_episr.c ****                             {
 822:.\Generated_Source\PSoC4/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:.\Generated_Source\PSoC4/USBFS_episr.c ****                             }
 824:.\Generated_Source\PSoC4/USBFS_episr.c ****                             else
 825:.\Generated_Source\PSoC4/USBFS_episr.c ****                             {
 826:.\Generated_Source\PSoC4/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:.\Generated_Source\PSoC4/USBFS_episr.c ****                             }
 828:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 831:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 833:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 834:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:.\Generated_Source\PSoC4/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:.\Generated_Source\PSoC4/USBFS_episr.c ****                         {
 837:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:.\Generated_Source\PSoC4/USBFS_episr.c ****                         }
 840:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 842:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 843:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 844:.\Generated_Source\PSoC4/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 847:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 848:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 849:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 850:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 19


 852:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 853:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 855:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 856:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 858:.\Generated_Source\PSoC4/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 862:.\Generated_Source\PSoC4/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 864:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 867:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 870:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC4/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:.\Generated_Source\PSoC4/USBFS_episr.c ****                     */
 873:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 875:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 880:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 883:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 886:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 887:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 890:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 892:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 895:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 896:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC4/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 899:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 902:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 904:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 905:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 907:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 908:.\Generated_Source\PSoC4/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 20


 909:.\Generated_Source\PSoC4/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 911:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 912:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 914:.\Generated_Source\PSoC4/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 916:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 918:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 919:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 921:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 923:.\Generated_Source\PSoC4/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 927:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 929:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 930:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 931:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++ep;
 932:.\Generated_Source\PSoC4/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 933:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 934:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 935:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 937:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 939:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 943:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 944:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /*  (USBFS_ARB_ISR_ACTIVE && USBFS_EP_MANAGEMENT_DMA) */
 945:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 946:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 947:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 948:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (CY_PSOC4)
 949:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA1_ACTIVE)
 950:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
 951:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP1_DMA_DONE_ISR
 952:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
 953:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 954:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 1 DMA Done Interrupt Service Routine.
 955:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 956:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 957:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
 958:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP1_DMA_DONE_ISR(void)
 959:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 960:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
 961:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 962:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
 963:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP1])
 964:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 965:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 21


 966:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP1];
 967:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 968:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
 969:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 970:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
 971:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP1_DMA_CH,
 972:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP1]
 973:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP1]
 974:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 975:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 976:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
 977:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
 978:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 979:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
 980:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
 981:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
 982:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
 983:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 984:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
 985:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
 986:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
 987:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 988:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
 989:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 990:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
 991:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
 992:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
 993:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
 994:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 995:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
 996:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
 997:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
 998:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 999:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1000:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1001:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
1002:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP1_DMA_CH);
1003:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP1]);
1004:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1005:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1006:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1007:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1008:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA2_ACTIVE)
1009:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1010:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP2_DMA_DONE_ISR
1011:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1012:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1013:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 2 DMA Done Interrupt Service Routine.
1014:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1015:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1016:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1017:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP2_DMA_DONE_ISR(void)
1018:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1019:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1020:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1021:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1022:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP2])
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 22


1023:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1024:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1025:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP2];
1026:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1027:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1028:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1029:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1030:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP2_DMA_CH,
1031:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP2]
1032:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP2]
1033:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1034:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1035:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1036:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
1037:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1038:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1039:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1040:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1041:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1042:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1043:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1044:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1045:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1046:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1047:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1048:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1049:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1050:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1051:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1052:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1053:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1054:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1055:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1056:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1057:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1058:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1059:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1060:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1061:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP2_DMA_CH);
1062:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP2]);
1063:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1064:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1065:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1066:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1067:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA3_ACTIVE)
1068:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1069:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP3_DMA_DONE_ISR
1070:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1071:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1072:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 3 DMA Done Interrupt Service Routine.
1073:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1074:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1075:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1076:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP3_DMA_DONE_ISR(void)
1077:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1078:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1079:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 23


1080:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1081:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP3])
1082:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1083:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1084:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP3];
1085:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1086:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1087:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1088:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1089:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP3_DMA_CH,
1090:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP3]
1091:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP3]
1092:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1093:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1094:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1095:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
1096:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1097:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1098:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1099:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1100:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1101:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1102:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1103:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1104:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1105:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1106:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1107:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1108:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1109:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1110:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1111:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1112:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1113:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1114:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1115:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1116:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1117:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1118:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1119:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1120:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP3_DMA_CH);
1121:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP3]);
1122:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1123:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1124:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1125:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1126:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA4_ACTIVE)
1127:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1128:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP4_DMA_DONE_ISR
1129:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1130:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1131:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 4 DMA Done Interrupt Service Routine.
1132:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1133:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1134:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1135:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP4_DMA_DONE_ISR(void)
1136:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 24


1137:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1138:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1139:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1140:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP4])
1141:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1142:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1143:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP4];
1144:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1145:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1146:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1147:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1148:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP4_DMA_CH,
1149:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP4]
1150:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP4]
1151:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1152:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1153:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1154:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
1155:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1156:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1157:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1158:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1159:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1160:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1161:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1162:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1163:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1164:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1165:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1166:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1167:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1168:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1169:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1170:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1171:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1172:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1173:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1174:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1175:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1176:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1177:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1178:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1179:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP4_DMA_CH);
1180:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP4]);
1181:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1182:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1183:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1184:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1185:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA5_ACTIVE)
1186:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1187:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP5_DMA_DONE_ISR
1188:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1189:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1190:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 5 DMA Done Interrupt Service Routine.
1191:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1192:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1193:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 25


1194:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP5_DMA_DONE_ISR(void)
1195:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1196:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1197:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1198:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1199:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP5])
1200:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1201:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1202:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP5];
1203:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1204:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1205:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1206:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1207:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP5_DMA_CH,
1208:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP5]
1209:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP5]
1210:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1211:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1212:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1213:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
1214:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1215:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1216:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1217:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1218:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1219:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1220:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1221:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1222:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1223:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1224:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1225:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1226:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1227:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1228:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1229:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1230:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1231:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1232:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1233:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1234:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1235:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1236:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1237:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1238:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP5_DMA_CH);
1239:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP5]);
1240:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1241:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1242:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1243:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1244:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA6_ACTIVE)
1245:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1246:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP6_DMA_DONE_ISR
1247:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1248:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1249:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 6 DMA Done Interrupt Service Routine.
1250:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 26


1251:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1252:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1253:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP6_DMA_DONE_ISR(void)
1254:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1255:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1256:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1257:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1258:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP6])
1259:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1260:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1261:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP6];
1262:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1263:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1264:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1265:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1266:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP6_DMA_CH,
1267:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP6]
1268:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP6]
1269:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1270:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1271:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1272:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
1273:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1274:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1275:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1276:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1277:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1278:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1279:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1280:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1281:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1282:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1283:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1284:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1285:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1286:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1287:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1288:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1289:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1290:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1291:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1292:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1293:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1294:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1295:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable the DMA to execute transfer as it was disabled because there were no valid de
1296:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1297:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP6_DMA_CH);
1298:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP6]);
1299:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1300:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1301:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1302:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1303:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA7_ACTIVE)
1304:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1305:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP7_DMA_DONE_ISR
1306:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1307:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 27


1308:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 7 DMA Done Interrupt Service Routine.
1309:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1310:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1311:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1312:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP7_DMA_DONE_ISR(void)
1313:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1314:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1315:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1316:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1317:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP7])
1318:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1319:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1320:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP7];
1321:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1322:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1323:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1324:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1325:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP7_DMA_CH,
1326:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP7]
1327:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP7]
1328:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1329:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1330:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1331:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
1332:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1333:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1334:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1335:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1336:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1337:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1338:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1339:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1340:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1341:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1342:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1343:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1344:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1345:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1346:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1347:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1348:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1349:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1350:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1351:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1352:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1353:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1354:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1355:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1356:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP7_DMA_CH);
1357:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP7]);
1358:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1359:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1360:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1361:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1362:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA8_ACTIVE)
1363:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1364:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP8_DMA_DONE_ISR
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 28


1365:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1366:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1367:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 8 DMA Done Interrupt Service Routine.
1368:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1369:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1370:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1371:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP8_DMA_DONE_ISR(void)
1372:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1373:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1374:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1375:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1376:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP8])
1377:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1378:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1379:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP8];
1380:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1381:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1382:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1383:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1384:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP8_DMA_CH,
1385:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP8]
1386:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP8]
1387:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1388:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1389:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1390:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
1391:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1392:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1393:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1394:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1395:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1396:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1397:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1398:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1399:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1400:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1401:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1402:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1403:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1404:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1405:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1406:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1407:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1408:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1409:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1410:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1411:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1412:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1413:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1414:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1415:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP8_DMA_CH);
1416:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP8]);
1417:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1418:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1419:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1420:.\Generated_Source\PSoC4/USBFS_episr.c **** #else
1421:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 29


1422:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1423:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP_DMA_DONE_ISR
1424:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1425:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1426:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  DMA Done Interrupt Service Routine.
1427:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1428:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1429:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1430:.\Generated_Source\PSoC4/USBFS_episr.c ****         CY_ISR(USBFS_EP_DMA_DONE_ISR)
1431:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1432:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 int8Status;
1433:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 int17Status;
1434:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 ep_status;
1435:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 ep = USBFS_EP1;
1436:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1437:.\Generated_Source\PSoC4/USBFS_episr.c ****         #ifdef USBFS_EP_DMA_DONE_ISR_ENTRY_CALLBACK
1438:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP_DMA_DONE_ISR_EntryCallback();
1439:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_EP_DMA_DONE_ISR_ENTRY_CALLBACK) */
1440:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1441:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#START EP_DMA_DONE_BEGIN_USER_CODE` Place your code here */
1442:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1443:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#END` */
1444:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1445:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read clear on read status register with EP source of interrupt. */
1446:.\Generated_Source\PSoC4/USBFS_episr.c ****             int17Status = USBFS_EP17_DMA_Done_SR_Read() & USBFS_EP17_SR_MASK;
1447:.\Generated_Source\PSoC4/USBFS_episr.c ****             int8Status  = USBFS_EP8_DMA_Done_SR_Read()  & USBFS_EP8_SR_MASK;
1448:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1449:.\Generated_Source\PSoC4/USBFS_episr.c ****             while (int8Status != 0u)
1450:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1451:.\Generated_Source\PSoC4/USBFS_episr.c ****                 while (int17Status != 0u)
1452:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
1453:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if ((int17Status & 1u) != 0u)  /* If EpX interrupt present. */
1454:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
1455:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Read Endpoint Status Register. */
1456:.\Generated_Source\PSoC4/USBFS_episr.c ****                         ep_status = USBFS_ARB_EP_BASE.arbEp[ep].epSr;
1457:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1458:.\Generated_Source\PSoC4/USBFS_episr.c ****                         if ((0u == (ep_status & USBFS_ARB_EPX_SR_IN_BUF_FULL)) &&
1459:.\Generated_Source\PSoC4/USBFS_episr.c ****                             (0u ==USBFS_inBufFull[ep]))
1460:.\Generated_Source\PSoC4/USBFS_episr.c ****                         {
1461:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* `#START EP_DMA_DONE_USER_CODE` Place your code here */
1462:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1463:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* `#END` */
1464:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1465:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #ifdef USBFS_EP_DMA_DONE_ISR_CALLBACK
1466:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_EP_DMA_DONE_ISR_Callback();
1467:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #endif /* (USBFS_EP_DMA_DONE_ISR_CALLBACK) */
1468:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1469:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Transfer again 2 last bytes into pre-fetch endpoint area. */
1470:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].rwWaMsb = 0u;
1471:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].rwWa = (USBFS_DMA_BYTES_PER_BURST * ep) - U
1472:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_LoadNextInEP(ep, 1u);
1473:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1474:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Set Data ready status to generate DMA request. */
1475:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1476:.\Generated_Source\PSoC4/USBFS_episr.c ****                         }
1477:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
1478:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 30


1479:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ep++;
1480:.\Generated_Source\PSoC4/USBFS_episr.c ****                     int17Status >>= 1u;
1481:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
1482:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1483:.\Generated_Source\PSoC4/USBFS_episr.c ****                 int8Status >>= 1u;
1484:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1485:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (int8Status != 0u)
1486:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
1487:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Prepare pointer for EP8. */
1488:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ep = USBFS_EP8;
1489:.\Generated_Source\PSoC4/USBFS_episr.c ****                     int17Status = int8Status & 0x01u;
1490:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
1491:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1492:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1493:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#START EP_DMA_DONE_END_USER_CODE` Place your code here */
1494:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1495:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#END` */
1496:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1497:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_DMA_DONE_ISR_EXIT_CALLBACK
1498:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_DMA_DONE_ISR_ExitCallback();
1499:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_DMA_DONE_ISR_EXIT_CALLBACK) */
1500:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1501:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1502:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (CY_PSOC4) */
1503:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1504:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1505:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1506:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (CY_PSOC4)
1507:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1508:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_IntrHandler
1509:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1510:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1511:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt handler for Hi/Mid/Low ISRs.
1512:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1513:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  regCause - The cause register of interrupt. One of the three variants:
1514:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_LO_REG - Low interrupts.
1515:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_MED_REG - Med interrupts.
1516:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_HI_REG - - High interrupts.
1517:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1518:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1519:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1520:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_INLINE static void USBFS_IntrHandler(uint32 intrCause)
1521:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
1522:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Array of pointers to component interrupt handlers. */
1523:.\Generated_Source\PSoC4/USBFS_episr.c ****         static const cyisraddress USBFS_isrCallbacks[] =
1524:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1525:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_SOF_ISR,
1526:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_BUS_RESET_ISR,
1527:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_0_ISR,
1528:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1529:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1530:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_1_ISR,
1531:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_2_ISR,
1532:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1533:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1534:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1535:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 31


1536:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1537:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1538:.\Generated_Source\PSoC4/USBFS_episr.c ****         };
1539:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1540:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 cbIdx = 0u;
1541:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1542:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Check arbiter interrupt source first. */
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (intrCause & USBFS_INTR_CAUSE_ARB_INTR))
1544:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_isrCallbacks[USBFS_ARB_EP_INTR_NUM]();
1546:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1547:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1548:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Check all other interrupt sources (except arbiter and resume). */
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****         intrCause = (intrCause  & USBFS_INTR_CAUSE_CTRL_INTR_MASK) |
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
1551:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
1552:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1553:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Call interrupt handlers for active interrupt sources. */
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         while (0u != intrCause)
1555:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (intrCause & 0x1u))
1557:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****                  USBFS_isrCallbacks[cbIdx]();
1559:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1560:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             intrCause >>= 1u;
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
1563:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1564:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
1565:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1566:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1567:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1568:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_HI_ISR
1569:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1570:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1571:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the high group of the interrupt sources.
1572:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1573:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1574:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1575:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_HI_ISR)
1576:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 176              		.loc 1 1576 0
 177              		.cfi_startproc
 178 0000 38B5     		push	{r3, r4, r5, lr}
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 3, -16
 181              		.cfi_offset 4, -12
 182              		.cfi_offset 5, -8
 183              		.cfi_offset 14, -4
1577:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_IntrHandler(USBFS_INTR_CAUSE_HI_REG);
 184              		.loc 1 1577 0
 185 0002 0D4B     		ldr	r3, .L20
 186 0004 1D68     		ldr	r5, [r3]
 187              	.LVL1:
 188              	.LBB4:
 189              	.LBB5:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 32


 190              		.loc 1 1543 0
 191 0006 2B06     		lsl	r3, r5, #24
 192 0008 01D5     		bpl	.L16
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 193              		.loc 1 1545 0
 194 000a 0023     		mov	r3, #0
 195 000c 9847     		blx	r3
 196              	.LVL2:
 197              	.L16:
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 198              		.loc 1 1549 0
 199 000e 0F24     		mov	r4, #15
 200 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 201              		.loc 1 1550 0
 202 0012 FF23     		mov	r3, #255
 203 0014 1B02     		lsl	r3, r3, #8
 204 0016 2B40     		and	r3, r5
 205 0018 DB08     		lsr	r3, r3, #3
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 206              		.loc 1 1549 0
 207 001a 1C43     		orr	r4, r3
 208              	.LVL3:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 209              		.loc 1 1540 0
 210 001c 0025     		mov	r5, #0
 211 001e 07E0     		b	.L17
 212              	.LVL4:
 213              	.L19:
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 214              		.loc 1 1556 0
 215 0020 E307     		lsl	r3, r4, #31
 216 0022 03D5     		bpl	.L18
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 217              		.loc 1 1558 0
 218 0024 AB00     		lsl	r3, r5, #2
 219 0026 054A     		ldr	r2, .L20+4
 220 0028 9B58     		ldr	r3, [r3, r2]
 221 002a 9847     		blx	r3
 222              	.LVL5:
 223              	.L18:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 224              		.loc 1 1561 0
 225 002c 6408     		lsr	r4, r4, #1
 226              	.LVL6:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 227              		.loc 1 1562 0
 228 002e 0135     		add	r5, r5, #1
 229              	.LVL7:
 230              	.L17:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 231              		.loc 1 1554 0
 232 0030 002C     		cmp	r4, #0
 233 0032 F5D1     		bne	.L19
 234              	.LBE5:
 235              	.LBE4:
1578:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 33


 236              		.loc 1 1578 0
 237              		@ sp needed
 238              	.LVL8:
 239              	.LVL9:
 240 0034 38BD     		pop	{r3, r4, r5, pc}
 241              	.L21:
 242 0036 C046     		.align	2
 243              	.L20:
 244 0038 34202C40 		.word	1076633652
 245 003c 00000000 		.word	.LANCHOR0
 246              		.cfi_endproc
 247              	.LFE7:
 248              		.size	USBFS_INTR_HI_ISR, .-USBFS_INTR_HI_ISR
 249              		.section	.text.USBFS_INTR_MED_ISR,"ax",%progbits
 250              		.align	2
 251              		.global	USBFS_INTR_MED_ISR
 252              		.code	16
 253              		.thumb_func
 254              		.type	USBFS_INTR_MED_ISR, %function
 255              	USBFS_INTR_MED_ISR:
 256              	.LFB8:
1579:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1580:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1581:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_MED_ISR
1582:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1583:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1584:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the medium group of the interrupt sources.
1585:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1586:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1587:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1588:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_MED_ISR)
1589:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 257              		.loc 1 1589 0
 258              		.cfi_startproc
 259 0000 38B5     		push	{r3, r4, r5, lr}
 260              		.cfi_def_cfa_offset 16
 261              		.cfi_offset 3, -16
 262              		.cfi_offset 4, -12
 263              		.cfi_offset 5, -8
 264              		.cfi_offset 14, -4
1590:.\Generated_Source\PSoC4/USBFS_episr.c ****        USBFS_IntrHandler(USBFS_INTR_CAUSE_MED_REG);
 265              		.loc 1 1590 0
 266 0002 0D4B     		ldr	r3, .L27
 267 0004 1D68     		ldr	r5, [r3]
 268              	.LVL10:
 269              	.LBB8:
 270              	.LBB9:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 271              		.loc 1 1543 0
 272 0006 2B06     		lsl	r3, r5, #24
 273 0008 01D5     		bpl	.L23
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 274              		.loc 1 1545 0
 275 000a 0023     		mov	r3, #0
 276 000c 9847     		blx	r3
 277              	.LVL11:
 278              	.L23:
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 34


1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 279              		.loc 1 1549 0
 280 000e 0F24     		mov	r4, #15
 281 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 282              		.loc 1 1550 0
 283 0012 FF23     		mov	r3, #255
 284 0014 1B02     		lsl	r3, r3, #8
 285 0016 2B40     		and	r3, r5
 286 0018 DB08     		lsr	r3, r3, #3
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 287              		.loc 1 1549 0
 288 001a 1C43     		orr	r4, r3
 289              	.LVL12:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 290              		.loc 1 1540 0
 291 001c 0025     		mov	r5, #0
 292 001e 07E0     		b	.L24
 293              	.LVL13:
 294              	.L26:
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 295              		.loc 1 1556 0
 296 0020 E307     		lsl	r3, r4, #31
 297 0022 03D5     		bpl	.L25
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 298              		.loc 1 1558 0
 299 0024 AB00     		lsl	r3, r5, #2
 300 0026 054A     		ldr	r2, .L27+4
 301 0028 9B58     		ldr	r3, [r3, r2]
 302 002a 9847     		blx	r3
 303              	.LVL14:
 304              	.L25:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 305              		.loc 1 1561 0
 306 002c 6408     		lsr	r4, r4, #1
 307              	.LVL15:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 308              		.loc 1 1562 0
 309 002e 0135     		add	r5, r5, #1
 310              	.LVL16:
 311              	.L24:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 312              		.loc 1 1554 0
 313 0030 002C     		cmp	r4, #0
 314 0032 F5D1     		bne	.L26
 315              	.LBE9:
 316              	.LBE8:
1591:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 317              		.loc 1 1591 0
 318              		@ sp needed
 319              	.LVL17:
 320              	.LVL18:
 321 0034 38BD     		pop	{r3, r4, r5, pc}
 322              	.L28:
 323 0036 C046     		.align	2
 324              	.L27:
 325 0038 38202C40 		.word	1076633656
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 35


 326 003c 00000000 		.word	.LANCHOR0
 327              		.cfi_endproc
 328              	.LFE8:
 329              		.size	USBFS_INTR_MED_ISR, .-USBFS_INTR_MED_ISR
 330              		.section	.text.USBFS_INTR_LO_ISR,"ax",%progbits
 331              		.align	2
 332              		.global	USBFS_INTR_LO_ISR
 333              		.code	16
 334              		.thumb_func
 335              		.type	USBFS_INTR_LO_ISR, %function
 336              	USBFS_INTR_LO_ISR:
 337              	.LFB9:
1592:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1593:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1594:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_LO_ISR
1595:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1596:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1597:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the low group of the interrupt sources.
1598:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1599:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1600:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1601:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_LO_ISR)
1602:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 338              		.loc 1 1602 0
 339              		.cfi_startproc
 340 0000 38B5     		push	{r3, r4, r5, lr}
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 3, -16
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
1603:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_IntrHandler(USBFS_INTR_CAUSE_LO_REG);
 346              		.loc 1 1603 0
 347 0002 0D4B     		ldr	r3, .L34
 348 0004 1D68     		ldr	r5, [r3]
 349              	.LVL19:
 350              	.LBB12:
 351              	.LBB13:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 352              		.loc 1 1543 0
 353 0006 2B06     		lsl	r3, r5, #24
 354 0008 01D5     		bpl	.L30
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 355              		.loc 1 1545 0
 356 000a 0023     		mov	r3, #0
 357 000c 9847     		blx	r3
 358              	.LVL20:
 359              	.L30:
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 360              		.loc 1 1549 0
 361 000e 0F24     		mov	r4, #15
 362 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 363              		.loc 1 1550 0
 364 0012 FF23     		mov	r3, #255
 365 0014 1B02     		lsl	r3, r3, #8
 366 0016 2B40     		and	r3, r5
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 36


 367 0018 DB08     		lsr	r3, r3, #3
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 368              		.loc 1 1549 0
 369 001a 1C43     		orr	r4, r3
 370              	.LVL21:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 371              		.loc 1 1540 0
 372 001c 0025     		mov	r5, #0
 373 001e 07E0     		b	.L31
 374              	.LVL22:
 375              	.L33:
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 376              		.loc 1 1556 0
 377 0020 E307     		lsl	r3, r4, #31
 378 0022 03D5     		bpl	.L32
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 379              		.loc 1 1558 0
 380 0024 AB00     		lsl	r3, r5, #2
 381 0026 054A     		ldr	r2, .L34+4
 382 0028 9B58     		ldr	r3, [r3, r2]
 383 002a 9847     		blx	r3
 384              	.LVL23:
 385              	.L32:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 386              		.loc 1 1561 0
 387 002c 6408     		lsr	r4, r4, #1
 388              	.LVL24:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 389              		.loc 1 1562 0
 390 002e 0135     		add	r5, r5, #1
 391              	.LVL25:
 392              	.L31:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 393              		.loc 1 1554 0
 394 0030 002C     		cmp	r4, #0
 395 0032 F5D1     		bne	.L33
 396              	.LBE13:
 397              	.LBE12:
1604:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 398              		.loc 1 1604 0
 399              		@ sp needed
 400              	.LVL26:
 401              	.LVL27:
 402 0034 38BD     		pop	{r3, r4, r5, pc}
 403              	.L35:
 404 0036 C046     		.align	2
 405              	.L34:
 406 0038 3C202C40 		.word	1076633660
 407 003c 00000000 		.word	.LANCHOR0
 408              		.cfi_endproc
 409              	.LFE9:
 410              		.size	USBFS_INTR_LO_ISR, .-USBFS_INTR_LO_ISR
 411              		.section	.rodata
 412              		.align	2
 413              		.set	.LANCHOR0,. + 0
 414              		.type	USBFS_isrCallbacks.5066, %object
 415              		.size	USBFS_isrCallbacks.5066, 52
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 37


 416              	USBFS_isrCallbacks.5066:
 417 0000 00000000 		.word	USBFS_SOF_ISR
 418 0004 00000000 		.word	USBFS_BUS_RESET_ISR
 419 0008 00000000 		.word	USBFS_EP_0_ISR
 420 000c 00000000 		.word	0
 421 0010 00000000 		.word	0
 422 0014 00000000 		.word	USBFS_EP_1_ISR
 423 0018 00000000 		.word	USBFS_EP_2_ISR
 424 001c 00000000 		.word	0
 425 0020 00000000 		.word	0
 426 0024 00000000 		.word	0
 427 0028 00000000 		.word	0
 428 002c 00000000 		.word	0
 429 0030 00000000 		.word	0
 430              		.text
 431              	.Letext0:
 432              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 433              		.file 3 ".\\Generated_Source\\PSoC4\\USBFS.h"
 434              		.file 4 ".\\Generated_Source\\PSoC4\\USBFS_pvt.h"
 435              		.section	.debug_info,"",%progbits
 436              	.Ldebug_info0:
 437 0000 CB030000 		.4byte	0x3cb
 438 0004 0400     		.2byte	0x4
 439 0006 00000000 		.4byte	.Ldebug_abbrev0
 440 000a 04       		.byte	0x4
 441 000b 01       		.uleb128 0x1
 442 000c 6A020000 		.4byte	.LASF43
 443 0010 01       		.byte	0x1
 444 0011 E7000000 		.4byte	.LASF44
 445 0015 19000000 		.4byte	.LASF45
 446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 447 001d 00000000 		.4byte	0
 448 0021 00000000 		.4byte	.Ldebug_line0
 449 0025 02       		.uleb128 0x2
 450 0026 01       		.byte	0x1
 451 0027 06       		.byte	0x6
 452 0028 45030000 		.4byte	.LASF0
 453 002c 02       		.uleb128 0x2
 454 002d 01       		.byte	0x1
 455 002e 08       		.byte	0x8
 456 002f 17010000 		.4byte	.LASF1
 457 0033 02       		.uleb128 0x2
 458 0034 02       		.byte	0x2
 459 0035 05       		.byte	0x5
 460 0036 03030000 		.4byte	.LASF2
 461 003a 02       		.uleb128 0x2
 462 003b 02       		.byte	0x2
 463 003c 07       		.byte	0x7
 464 003d 9D000000 		.4byte	.LASF3
 465 0041 02       		.uleb128 0x2
 466 0042 04       		.byte	0x4
 467 0043 05       		.byte	0x5
 468 0044 23030000 		.4byte	.LASF4
 469 0048 02       		.uleb128 0x2
 470 0049 04       		.byte	0x4
 471 004a 07       		.byte	0x7
 472 004b 30010000 		.4byte	.LASF5
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 38


 473 004f 02       		.uleb128 0x2
 474 0050 08       		.byte	0x8
 475 0051 05       		.byte	0x5
 476 0052 45020000 		.4byte	.LASF6
 477 0056 02       		.uleb128 0x2
 478 0057 08       		.byte	0x8
 479 0058 07       		.byte	0x7
 480 0059 EE010000 		.4byte	.LASF7
 481 005d 03       		.uleb128 0x3
 482 005e 04       		.byte	0x4
 483 005f 05       		.byte	0x5
 484 0060 696E7400 		.ascii	"int\000"
 485 0064 02       		.uleb128 0x2
 486 0065 04       		.byte	0x4
 487 0066 07       		.byte	0x7
 488 0067 CE010000 		.4byte	.LASF8
 489 006b 04       		.uleb128 0x4
 490 006c 0D030000 		.4byte	.LASF9
 491 0070 02       		.byte	0x2
 492 0071 3801     		.2byte	0x138
 493 0073 2C000000 		.4byte	0x2c
 494 0077 04       		.uleb128 0x4
 495 0078 AB010000 		.4byte	.LASF10
 496 007c 02       		.byte	0x2
 497 007d 3901     		.2byte	0x139
 498 007f 3A000000 		.4byte	0x3a
 499 0083 04       		.uleb128 0x4
 500 0084 C7010000 		.4byte	.LASF11
 501 0088 02       		.byte	0x2
 502 0089 3A01     		.2byte	0x13a
 503 008b 48000000 		.4byte	0x48
 504 008f 02       		.uleb128 0x2
 505 0090 04       		.byte	0x4
 506 0091 04       		.byte	0x4
 507 0092 97000000 		.4byte	.LASF12
 508 0096 02       		.uleb128 0x2
 509 0097 08       		.byte	0x8
 510 0098 04       		.byte	0x4
 511 0099 76010000 		.4byte	.LASF13
 512 009d 02       		.uleb128 0x2
 513 009e 01       		.byte	0x1
 514 009f 08       		.byte	0x8
 515 00a0 53020000 		.4byte	.LASF14
 516 00a4 04       		.uleb128 0x4
 517 00a5 13000000 		.4byte	.LASF15
 518 00a9 02       		.byte	0x2
 519 00aa E401     		.2byte	0x1e4
 520 00ac B0000000 		.4byte	0xb0
 521 00b0 05       		.uleb128 0x5
 522 00b1 83000000 		.4byte	0x83
 523 00b5 04       		.uleb128 0x4
 524 00b6 05020000 		.4byte	.LASF16
 525 00ba 02       		.byte	0x2
 526 00bb F401     		.2byte	0x1f4
 527 00bd C1000000 		.4byte	0xc1
 528 00c1 06       		.uleb128 0x6
 529 00c2 04       		.byte	0x4
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 39


 530 00c3 C7000000 		.4byte	0xc7
 531 00c7 07       		.uleb128 0x7
 532 00c8 02       		.uleb128 0x2
 533 00c9 04       		.byte	0x4
 534 00ca 07       		.byte	0x7
 535 00cb 2E020000 		.4byte	.LASF17
 536 00cf 08       		.uleb128 0x8
 537 00d0 0C       		.byte	0xc
 538 00d1 03       		.byte	0x3
 539 00d2 9A       		.byte	0x9a
 540 00d3 44010000 		.4byte	0x144
 541 00d7 09       		.uleb128 0x9
 542 00d8 37020000 		.4byte	.LASF18
 543 00dc 03       		.byte	0x3
 544 00dd 9C       		.byte	0x9c
 545 00de 6B000000 		.4byte	0x6b
 546 00e2 00       		.byte	0
 547 00e3 09       		.uleb128 0x9
 548 00e4 25010000 		.4byte	.LASF19
 549 00e8 03       		.byte	0x3
 550 00e9 9D       		.byte	0x9d
 551 00ea 6B000000 		.4byte	0x6b
 552 00ee 01       		.byte	0x1
 553 00ef 09       		.uleb128 0x9
 554 00f0 12020000 		.4byte	.LASF20
 555 00f4 03       		.byte	0x3
 556 00f5 9E       		.byte	0x9e
 557 00f6 6B000000 		.4byte	0x6b
 558 00fa 02       		.byte	0x2
 559 00fb 09       		.uleb128 0x9
 560 00fc 0E010000 		.4byte	.LASF21
 561 0100 03       		.byte	0x3
 562 0101 9F       		.byte	0x9f
 563 0102 6B000000 		.4byte	0x6b
 564 0106 03       		.byte	0x3
 565 0107 09       		.uleb128 0x9
 566 0108 42010000 		.4byte	.LASF22
 567 010c 03       		.byte	0x3
 568 010d A0       		.byte	0xa0
 569 010e 6B000000 		.4byte	0x6b
 570 0112 04       		.byte	0x4
 571 0113 09       		.uleb128 0x9
 572 0114 3E020000 		.4byte	.LASF23
 573 0118 03       		.byte	0x3
 574 0119 A1       		.byte	0xa1
 575 011a 6B000000 		.4byte	0x6b
 576 011e 05       		.byte	0x5
 577 011f 09       		.uleb128 0x9
 578 0120 91010000 		.4byte	.LASF24
 579 0124 03       		.byte	0x3
 580 0125 A2       		.byte	0xa2
 581 0126 77000000 		.4byte	0x77
 582 012a 06       		.byte	0x6
 583 012b 09       		.uleb128 0x9
 584 012c F8020000 		.4byte	.LASF25
 585 0130 03       		.byte	0x3
 586 0131 A3       		.byte	0xa3
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 40


 587 0132 77000000 		.4byte	0x77
 588 0136 08       		.byte	0x8
 589 0137 09       		.uleb128 0x9
 590 0138 13030000 		.4byte	.LASF26
 591 013c 03       		.byte	0x3
 592 013d A4       		.byte	0xa4
 593 013e 6B000000 		.4byte	0x6b
 594 0142 0A       		.byte	0xa
 595 0143 00       		.byte	0
 596 0144 0A       		.uleb128 0xa
 597 0145 B0000000 		.4byte	.LASF27
 598 0149 03       		.byte	0x3
 599 014a A5       		.byte	0xa5
 600 014b CF000000 		.4byte	0xcf
 601 014f 08       		.uleb128 0x8
 602 0150 40       		.byte	0x40
 603 0151 03       		.byte	0x3
 604 0152 E1       		.byte	0xe1
 605 0153 88010000 		.4byte	0x188
 606 0157 09       		.uleb128 0x9
 607 0158 D9000000 		.4byte	.LASF28
 608 015c 03       		.byte	0x3
 609 015d E3       		.byte	0xe3
 610 015e 83000000 		.4byte	0x83
 611 0162 00       		.byte	0
 612 0163 09       		.uleb128 0x9
 613 0164 E0000000 		.4byte	.LASF29
 614 0168 03       		.byte	0x3
 615 0169 E4       		.byte	0xe4
 616 016a 83000000 		.4byte	0x83
 617 016e 04       		.byte	0x4
 618 016f 09       		.uleb128 0x9
 619 0170 91000000 		.4byte	.LASF30
 620 0174 03       		.byte	0x3
 621 0175 E5       		.byte	0xe5
 622 0176 83000000 		.4byte	0x83
 623 017a 08       		.byte	0x8
 624 017b 0B       		.uleb128 0xb
 625 017c 67617000 		.ascii	"gap\000"
 626 0180 03       		.byte	0x3
 627 0181 E6       		.byte	0xe6
 628 0182 88010000 		.4byte	0x188
 629 0186 0C       		.byte	0xc
 630 0187 00       		.byte	0
 631 0188 0C       		.uleb128 0xc
 632 0189 83000000 		.4byte	0x83
 633 018d 98010000 		.4byte	0x198
 634 0191 0D       		.uleb128 0xd
 635 0192 C8000000 		.4byte	0xc8
 636 0196 0C       		.byte	0xc
 637 0197 00       		.byte	0
 638 0198 0A       		.uleb128 0xa
 639 0199 7D010000 		.4byte	.LASF31
 640 019d 03       		.byte	0x3
 641 019e E7       		.byte	0xe7
 642 019f 4F010000 		.4byte	0x14f
 643 01a3 0E       		.uleb128 0xe
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 41


 644 01a4 4002     		.2byte	0x240
 645 01a6 03       		.byte	0x3
 646 01a7 1B01     		.2byte	0x11b
 647 01a9 BB010000 		.4byte	0x1bb
 648 01ad 0F       		.uleb128 0xf
 649 01ae 55010000 		.4byte	.LASF32
 650 01b2 03       		.byte	0x3
 651 01b3 1D01     		.2byte	0x11d
 652 01b5 BB010000 		.4byte	0x1bb
 653 01b9 00       		.byte	0
 654 01ba 00       		.byte	0
 655 01bb 0C       		.uleb128 0xc
 656 01bc 98010000 		.4byte	0x198
 657 01c0 CB010000 		.4byte	0x1cb
 658 01c4 0D       		.uleb128 0xd
 659 01c5 C8000000 		.4byte	0xc8
 660 01c9 08       		.byte	0x8
 661 01ca 00       		.byte	0
 662 01cb 04       		.uleb128 0x4
 663 01cc B2010000 		.4byte	.LASF33
 664 01d0 03       		.byte	0x3
 665 01d1 1E01     		.2byte	0x11e
 666 01d3 A3010000 		.4byte	0x1a3
 667 01d7 10       		.uleb128 0x10
 668 01d8 9C010000 		.4byte	.LASF34
 669 01dc 01       		.byte	0x1
 670 01dd 25       		.byte	0x25
 671 01de 00000000 		.4byte	.LFB2
 672 01e2 34000000 		.4byte	.LFE2-.LFB2
 673 01e6 01       		.uleb128 0x1
 674 01e7 9C       		.byte	0x9c
 675 01e8 10       		.uleb128 0x10
 676 01e9 36030000 		.4byte	.LASF35
 677 01ed 01       		.byte	0x1
 678 01ee 78       		.byte	0x78
 679 01ef 00000000 		.4byte	.LFB3
 680 01f3 38000000 		.4byte	.LFE3-.LFB3
 681 01f7 01       		.uleb128 0x1
 682 01f8 9C       		.byte	0x9c
 683 01f9 11       		.uleb128 0x11
 684 01fa 47010000 		.4byte	.LASF36
 685 01fe 01       		.byte	0x1
 686 01ff B502     		.2byte	0x2b5
 687 0201 00000000 		.4byte	.LFB4
 688 0205 0C000000 		.4byte	.LFE4-.LFB4
 689 0209 01       		.uleb128 0x1
 690 020a 9C       		.byte	0x9c
 691 020b 12       		.uleb128 0x12
 692 020c C5000000 		.4byte	.LASF39
 693 0210 01       		.byte	0x1
 694 0211 D202     		.2byte	0x2d2
 695 0213 00000000 		.4byte	.LFB5
 696 0217 14000000 		.4byte	.LFE5-.LFB5
 697 021b 01       		.uleb128 0x1
 698 021c 9C       		.byte	0x9c
 699 021d 2B020000 		.4byte	0x22b
 700 0221 13       		.uleb128 0x13
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 42


 701 0222 0C000000 		.4byte	.LVL0
 702 0226 C7030000 		.4byte	0x3c7
 703 022a 00       		.byte	0
 704 022b 14       		.uleb128 0x14
 705 022c 64010000 		.4byte	.LASF46
 706 0230 01       		.byte	0x1
 707 0231 F005     		.2byte	0x5f0
 708 0233 03       		.byte	0x3
 709 0234 5D020000 		.4byte	0x25d
 710 0238 15       		.uleb128 0x15
 711 0239 2C030000 		.4byte	.LASF47
 712 023d 01       		.byte	0x1
 713 023e F005     		.2byte	0x5f0
 714 0240 83000000 		.4byte	0x83
 715 0244 16       		.uleb128 0x16
 716 0245 DB010000 		.4byte	.LASF37
 717 0249 01       		.byte	0x1
 718 024a F305     		.2byte	0x5f3
 719 024c 6D020000 		.4byte	0x26d
 720 0250 16       		.uleb128 0x16
 721 0251 1D030000 		.4byte	.LASF38
 722 0255 01       		.byte	0x1
 723 0256 0406     		.2byte	0x604
 724 0258 83000000 		.4byte	0x83
 725 025c 00       		.byte	0
 726 025d 0C       		.uleb128 0xc
 727 025e B5000000 		.4byte	0xb5
 728 0262 6D020000 		.4byte	0x26d
 729 0266 0D       		.uleb128 0xd
 730 0267 C8000000 		.4byte	0xc8
 731 026b 0C       		.byte	0xc
 732 026c 00       		.byte	0
 733 026d 17       		.uleb128 0x17
 734 026e 5D020000 		.4byte	0x25d
 735 0272 12       		.uleb128 0x12
 736 0273 1C020000 		.4byte	.LASF40
 737 0277 01       		.byte	0x1
 738 0278 2706     		.2byte	0x627
 739 027a 00000000 		.4byte	.LFB7
 740 027e 40000000 		.4byte	.LFE7-.LFB7
 741 0282 01       		.uleb128 0x1
 742 0283 9C       		.byte	0x9c
 743 0284 D9020000 		.4byte	0x2d9
 744 0288 18       		.uleb128 0x18
 745 0289 2B020000 		.4byte	0x22b
 746 028d 06000000 		.4byte	.LBB4
 747 0291 2E000000 		.4byte	.LBE4-.LBB4
 748 0295 01       		.byte	0x1
 749 0296 2906     		.2byte	0x629
 750 0298 19       		.uleb128 0x19
 751 0299 38020000 		.4byte	0x238
 752 029d 00000000 		.4byte	.LLST0
 753 02a1 1A       		.uleb128 0x1a
 754 02a2 06000000 		.4byte	.LBB5
 755 02a6 2E000000 		.4byte	.LBE5-.LBB5
 756 02aa 1B       		.uleb128 0x1b
 757 02ab 50020000 		.4byte	0x250
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 43


 758 02af 1E000000 		.4byte	.LLST1
 759 02b3 1C       		.uleb128 0x1c
 760 02b4 44020000 		.4byte	0x244
 761 02b8 05       		.uleb128 0x5
 762 02b9 03       		.byte	0x3
 763 02ba 00000000 		.4byte	USBFS_isrCallbacks.5066
 764 02be 1D       		.uleb128 0x1d
 765 02bf 0E000000 		.4byte	.LVL2
 766 02c3 01       		.uleb128 0x1
 767 02c4 30       		.byte	0x30
 768 02c5 1D       		.uleb128 0x1d
 769 02c6 2C000000 		.4byte	.LVL5
 770 02ca 0B       		.uleb128 0xb
 771 02cb 75       		.byte	0x75
 772 02cc 00       		.sleb128 0
 773 02cd 32       		.byte	0x32
 774 02ce 24       		.byte	0x24
 775 02cf 03       		.byte	0x3
 776 02d0 00000000 		.4byte	.LANCHOR0
 777 02d4 22       		.byte	0x22
 778 02d5 06       		.byte	0x6
 779 02d6 00       		.byte	0
 780 02d7 00       		.byte	0
 781 02d8 00       		.byte	0
 782 02d9 12       		.uleb128 0x12
 783 02da 00000000 		.4byte	.LASF41
 784 02de 01       		.byte	0x1
 785 02df 3406     		.2byte	0x634
 786 02e1 00000000 		.4byte	.LFB8
 787 02e5 40000000 		.4byte	.LFE8-.LFB8
 788 02e9 01       		.uleb128 0x1
 789 02ea 9C       		.byte	0x9c
 790 02eb 40030000 		.4byte	0x340
 791 02ef 18       		.uleb128 0x18
 792 02f0 2B020000 		.4byte	0x22b
 793 02f4 06000000 		.4byte	.LBB8
 794 02f8 2E000000 		.4byte	.LBE8-.LBB8
 795 02fc 01       		.byte	0x1
 796 02fd 3606     		.2byte	0x636
 797 02ff 19       		.uleb128 0x19
 798 0300 38020000 		.4byte	0x238
 799 0304 3D000000 		.4byte	.LLST2
 800 0308 1A       		.uleb128 0x1a
 801 0309 06000000 		.4byte	.LBB9
 802 030d 2E000000 		.4byte	.LBE9-.LBB9
 803 0311 1B       		.uleb128 0x1b
 804 0312 50020000 		.4byte	0x250
 805 0316 5B000000 		.4byte	.LLST3
 806 031a 1C       		.uleb128 0x1c
 807 031b 44020000 		.4byte	0x244
 808 031f 05       		.uleb128 0x5
 809 0320 03       		.byte	0x3
 810 0321 00000000 		.4byte	USBFS_isrCallbacks.5066
 811 0325 1D       		.uleb128 0x1d
 812 0326 0E000000 		.4byte	.LVL11
 813 032a 01       		.uleb128 0x1
 814 032b 30       		.byte	0x30
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 44


 815 032c 1D       		.uleb128 0x1d
 816 032d 2C000000 		.4byte	.LVL14
 817 0331 0B       		.uleb128 0xb
 818 0332 75       		.byte	0x75
 819 0333 00       		.sleb128 0
 820 0334 32       		.byte	0x32
 821 0335 24       		.byte	0x24
 822 0336 03       		.byte	0x3
 823 0337 00000000 		.4byte	.LANCHOR0
 824 033b 22       		.byte	0x22
 825 033c 06       		.byte	0x6
 826 033d 00       		.byte	0
 827 033e 00       		.byte	0
 828 033f 00       		.byte	0
 829 0340 12       		.uleb128 0x12
 830 0341 58020000 		.4byte	.LASF42
 831 0345 01       		.byte	0x1
 832 0346 4106     		.2byte	0x641
 833 0348 00000000 		.4byte	.LFB9
 834 034c 40000000 		.4byte	.LFE9-.LFB9
 835 0350 01       		.uleb128 0x1
 836 0351 9C       		.byte	0x9c
 837 0352 A7030000 		.4byte	0x3a7
 838 0356 18       		.uleb128 0x18
 839 0357 2B020000 		.4byte	0x22b
 840 035b 06000000 		.4byte	.LBB12
 841 035f 2E000000 		.4byte	.LBE12-.LBB12
 842 0363 01       		.byte	0x1
 843 0364 4306     		.2byte	0x643
 844 0366 19       		.uleb128 0x19
 845 0367 38020000 		.4byte	0x238
 846 036b 7A000000 		.4byte	.LLST4
 847 036f 1A       		.uleb128 0x1a
 848 0370 06000000 		.4byte	.LBB13
 849 0374 2E000000 		.4byte	.LBE13-.LBB13
 850 0378 1B       		.uleb128 0x1b
 851 0379 50020000 		.4byte	0x250
 852 037d 98000000 		.4byte	.LLST5
 853 0381 1C       		.uleb128 0x1c
 854 0382 44020000 		.4byte	0x244
 855 0386 05       		.uleb128 0x5
 856 0387 03       		.byte	0x3
 857 0388 00000000 		.4byte	USBFS_isrCallbacks.5066
 858 038c 1D       		.uleb128 0x1d
 859 038d 0E000000 		.4byte	.LVL20
 860 0391 01       		.uleb128 0x1
 861 0392 30       		.byte	0x30
 862 0393 1D       		.uleb128 0x1d
 863 0394 2C000000 		.4byte	.LVL23
 864 0398 0B       		.uleb128 0xb
 865 0399 75       		.byte	0x75
 866 039a 00       		.sleb128 0
 867 039b 32       		.byte	0x32
 868 039c 24       		.byte	0x24
 869 039d 03       		.byte	0x3
 870 039e 00000000 		.4byte	.LANCHOR0
 871 03a2 22       		.byte	0x22
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 45


 872 03a3 06       		.byte	0x6
 873 03a4 00       		.byte	0
 874 03a5 00       		.byte	0
 875 03a6 00       		.byte	0
 876 03a7 0C       		.uleb128 0xc
 877 03a8 44010000 		.4byte	0x144
 878 03ac B7030000 		.4byte	0x3b7
 879 03b0 0D       		.uleb128 0xd
 880 03b1 C8000000 		.4byte	0xc8
 881 03b5 08       		.byte	0x8
 882 03b6 00       		.byte	0
 883 03b7 1E       		.uleb128 0x1e
 884 03b8 5B010000 		.4byte	.LASF48
 885 03bc 04       		.byte	0x4
 886 03bd 8B       		.byte	0x8b
 887 03be C2030000 		.4byte	0x3c2
 888 03c2 05       		.uleb128 0x5
 889 03c3 A7030000 		.4byte	0x3a7
 890 03c7 1F       		.uleb128 0x1f
 891 03c8 7B000000 		.4byte	.LASF49
 892 03cc 04       		.byte	0x4
 893 03cd B6       		.byte	0xb6
 894 03ce 00       		.byte	0
 895              		.section	.debug_abbrev,"",%progbits
 896              	.Ldebug_abbrev0:
 897 0000 01       		.uleb128 0x1
 898 0001 11       		.uleb128 0x11
 899 0002 01       		.byte	0x1
 900 0003 25       		.uleb128 0x25
 901 0004 0E       		.uleb128 0xe
 902 0005 13       		.uleb128 0x13
 903 0006 0B       		.uleb128 0xb
 904 0007 03       		.uleb128 0x3
 905 0008 0E       		.uleb128 0xe
 906 0009 1B       		.uleb128 0x1b
 907 000a 0E       		.uleb128 0xe
 908 000b 55       		.uleb128 0x55
 909 000c 17       		.uleb128 0x17
 910 000d 11       		.uleb128 0x11
 911 000e 01       		.uleb128 0x1
 912 000f 10       		.uleb128 0x10
 913 0010 17       		.uleb128 0x17
 914 0011 00       		.byte	0
 915 0012 00       		.byte	0
 916 0013 02       		.uleb128 0x2
 917 0014 24       		.uleb128 0x24
 918 0015 00       		.byte	0
 919 0016 0B       		.uleb128 0xb
 920 0017 0B       		.uleb128 0xb
 921 0018 3E       		.uleb128 0x3e
 922 0019 0B       		.uleb128 0xb
 923 001a 03       		.uleb128 0x3
 924 001b 0E       		.uleb128 0xe
 925 001c 00       		.byte	0
 926 001d 00       		.byte	0
 927 001e 03       		.uleb128 0x3
 928 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 46


 929 0020 00       		.byte	0
 930 0021 0B       		.uleb128 0xb
 931 0022 0B       		.uleb128 0xb
 932 0023 3E       		.uleb128 0x3e
 933 0024 0B       		.uleb128 0xb
 934 0025 03       		.uleb128 0x3
 935 0026 08       		.uleb128 0x8
 936 0027 00       		.byte	0
 937 0028 00       		.byte	0
 938 0029 04       		.uleb128 0x4
 939 002a 16       		.uleb128 0x16
 940 002b 00       		.byte	0
 941 002c 03       		.uleb128 0x3
 942 002d 0E       		.uleb128 0xe
 943 002e 3A       		.uleb128 0x3a
 944 002f 0B       		.uleb128 0xb
 945 0030 3B       		.uleb128 0x3b
 946 0031 05       		.uleb128 0x5
 947 0032 49       		.uleb128 0x49
 948 0033 13       		.uleb128 0x13
 949 0034 00       		.byte	0
 950 0035 00       		.byte	0
 951 0036 05       		.uleb128 0x5
 952 0037 35       		.uleb128 0x35
 953 0038 00       		.byte	0
 954 0039 49       		.uleb128 0x49
 955 003a 13       		.uleb128 0x13
 956 003b 00       		.byte	0
 957 003c 00       		.byte	0
 958 003d 06       		.uleb128 0x6
 959 003e 0F       		.uleb128 0xf
 960 003f 00       		.byte	0
 961 0040 0B       		.uleb128 0xb
 962 0041 0B       		.uleb128 0xb
 963 0042 49       		.uleb128 0x49
 964 0043 13       		.uleb128 0x13
 965 0044 00       		.byte	0
 966 0045 00       		.byte	0
 967 0046 07       		.uleb128 0x7
 968 0047 15       		.uleb128 0x15
 969 0048 00       		.byte	0
 970 0049 27       		.uleb128 0x27
 971 004a 19       		.uleb128 0x19
 972 004b 00       		.byte	0
 973 004c 00       		.byte	0
 974 004d 08       		.uleb128 0x8
 975 004e 13       		.uleb128 0x13
 976 004f 01       		.byte	0x1
 977 0050 0B       		.uleb128 0xb
 978 0051 0B       		.uleb128 0xb
 979 0052 3A       		.uleb128 0x3a
 980 0053 0B       		.uleb128 0xb
 981 0054 3B       		.uleb128 0x3b
 982 0055 0B       		.uleb128 0xb
 983 0056 01       		.uleb128 0x1
 984 0057 13       		.uleb128 0x13
 985 0058 00       		.byte	0
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 47


 986 0059 00       		.byte	0
 987 005a 09       		.uleb128 0x9
 988 005b 0D       		.uleb128 0xd
 989 005c 00       		.byte	0
 990 005d 03       		.uleb128 0x3
 991 005e 0E       		.uleb128 0xe
 992 005f 3A       		.uleb128 0x3a
 993 0060 0B       		.uleb128 0xb
 994 0061 3B       		.uleb128 0x3b
 995 0062 0B       		.uleb128 0xb
 996 0063 49       		.uleb128 0x49
 997 0064 13       		.uleb128 0x13
 998 0065 38       		.uleb128 0x38
 999 0066 0B       		.uleb128 0xb
 1000 0067 00       		.byte	0
 1001 0068 00       		.byte	0
 1002 0069 0A       		.uleb128 0xa
 1003 006a 16       		.uleb128 0x16
 1004 006b 00       		.byte	0
 1005 006c 03       		.uleb128 0x3
 1006 006d 0E       		.uleb128 0xe
 1007 006e 3A       		.uleb128 0x3a
 1008 006f 0B       		.uleb128 0xb
 1009 0070 3B       		.uleb128 0x3b
 1010 0071 0B       		.uleb128 0xb
 1011 0072 49       		.uleb128 0x49
 1012 0073 13       		.uleb128 0x13
 1013 0074 00       		.byte	0
 1014 0075 00       		.byte	0
 1015 0076 0B       		.uleb128 0xb
 1016 0077 0D       		.uleb128 0xd
 1017 0078 00       		.byte	0
 1018 0079 03       		.uleb128 0x3
 1019 007a 08       		.uleb128 0x8
 1020 007b 3A       		.uleb128 0x3a
 1021 007c 0B       		.uleb128 0xb
 1022 007d 3B       		.uleb128 0x3b
 1023 007e 0B       		.uleb128 0xb
 1024 007f 49       		.uleb128 0x49
 1025 0080 13       		.uleb128 0x13
 1026 0081 38       		.uleb128 0x38
 1027 0082 0B       		.uleb128 0xb
 1028 0083 00       		.byte	0
 1029 0084 00       		.byte	0
 1030 0085 0C       		.uleb128 0xc
 1031 0086 01       		.uleb128 0x1
 1032 0087 01       		.byte	0x1
 1033 0088 49       		.uleb128 0x49
 1034 0089 13       		.uleb128 0x13
 1035 008a 01       		.uleb128 0x1
 1036 008b 13       		.uleb128 0x13
 1037 008c 00       		.byte	0
 1038 008d 00       		.byte	0
 1039 008e 0D       		.uleb128 0xd
 1040 008f 21       		.uleb128 0x21
 1041 0090 00       		.byte	0
 1042 0091 49       		.uleb128 0x49
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 48


 1043 0092 13       		.uleb128 0x13
 1044 0093 2F       		.uleb128 0x2f
 1045 0094 0B       		.uleb128 0xb
 1046 0095 00       		.byte	0
 1047 0096 00       		.byte	0
 1048 0097 0E       		.uleb128 0xe
 1049 0098 13       		.uleb128 0x13
 1050 0099 01       		.byte	0x1
 1051 009a 0B       		.uleb128 0xb
 1052 009b 05       		.uleb128 0x5
 1053 009c 3A       		.uleb128 0x3a
 1054 009d 0B       		.uleb128 0xb
 1055 009e 3B       		.uleb128 0x3b
 1056 009f 05       		.uleb128 0x5
 1057 00a0 01       		.uleb128 0x1
 1058 00a1 13       		.uleb128 0x13
 1059 00a2 00       		.byte	0
 1060 00a3 00       		.byte	0
 1061 00a4 0F       		.uleb128 0xf
 1062 00a5 0D       		.uleb128 0xd
 1063 00a6 00       		.byte	0
 1064 00a7 03       		.uleb128 0x3
 1065 00a8 0E       		.uleb128 0xe
 1066 00a9 3A       		.uleb128 0x3a
 1067 00aa 0B       		.uleb128 0xb
 1068 00ab 3B       		.uleb128 0x3b
 1069 00ac 05       		.uleb128 0x5
 1070 00ad 49       		.uleb128 0x49
 1071 00ae 13       		.uleb128 0x13
 1072 00af 38       		.uleb128 0x38
 1073 00b0 0B       		.uleb128 0xb
 1074 00b1 00       		.byte	0
 1075 00b2 00       		.byte	0
 1076 00b3 10       		.uleb128 0x10
 1077 00b4 2E       		.uleb128 0x2e
 1078 00b5 00       		.byte	0
 1079 00b6 3F       		.uleb128 0x3f
 1080 00b7 19       		.uleb128 0x19
 1081 00b8 03       		.uleb128 0x3
 1082 00b9 0E       		.uleb128 0xe
 1083 00ba 3A       		.uleb128 0x3a
 1084 00bb 0B       		.uleb128 0xb
 1085 00bc 3B       		.uleb128 0x3b
 1086 00bd 0B       		.uleb128 0xb
 1087 00be 27       		.uleb128 0x27
 1088 00bf 19       		.uleb128 0x19
 1089 00c0 11       		.uleb128 0x11
 1090 00c1 01       		.uleb128 0x1
 1091 00c2 12       		.uleb128 0x12
 1092 00c3 06       		.uleb128 0x6
 1093 00c4 40       		.uleb128 0x40
 1094 00c5 18       		.uleb128 0x18
 1095 00c6 9742     		.uleb128 0x2117
 1096 00c8 19       		.uleb128 0x19
 1097 00c9 00       		.byte	0
 1098 00ca 00       		.byte	0
 1099 00cb 11       		.uleb128 0x11
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 49


 1100 00cc 2E       		.uleb128 0x2e
 1101 00cd 00       		.byte	0
 1102 00ce 3F       		.uleb128 0x3f
 1103 00cf 19       		.uleb128 0x19
 1104 00d0 03       		.uleb128 0x3
 1105 00d1 0E       		.uleb128 0xe
 1106 00d2 3A       		.uleb128 0x3a
 1107 00d3 0B       		.uleb128 0xb
 1108 00d4 3B       		.uleb128 0x3b
 1109 00d5 05       		.uleb128 0x5
 1110 00d6 27       		.uleb128 0x27
 1111 00d7 19       		.uleb128 0x19
 1112 00d8 11       		.uleb128 0x11
 1113 00d9 01       		.uleb128 0x1
 1114 00da 12       		.uleb128 0x12
 1115 00db 06       		.uleb128 0x6
 1116 00dc 40       		.uleb128 0x40
 1117 00dd 18       		.uleb128 0x18
 1118 00de 9742     		.uleb128 0x2117
 1119 00e0 19       		.uleb128 0x19
 1120 00e1 00       		.byte	0
 1121 00e2 00       		.byte	0
 1122 00e3 12       		.uleb128 0x12
 1123 00e4 2E       		.uleb128 0x2e
 1124 00e5 01       		.byte	0x1
 1125 00e6 3F       		.uleb128 0x3f
 1126 00e7 19       		.uleb128 0x19
 1127 00e8 03       		.uleb128 0x3
 1128 00e9 0E       		.uleb128 0xe
 1129 00ea 3A       		.uleb128 0x3a
 1130 00eb 0B       		.uleb128 0xb
 1131 00ec 3B       		.uleb128 0x3b
 1132 00ed 05       		.uleb128 0x5
 1133 00ee 27       		.uleb128 0x27
 1134 00ef 19       		.uleb128 0x19
 1135 00f0 11       		.uleb128 0x11
 1136 00f1 01       		.uleb128 0x1
 1137 00f2 12       		.uleb128 0x12
 1138 00f3 06       		.uleb128 0x6
 1139 00f4 40       		.uleb128 0x40
 1140 00f5 18       		.uleb128 0x18
 1141 00f6 9742     		.uleb128 0x2117
 1142 00f8 19       		.uleb128 0x19
 1143 00f9 01       		.uleb128 0x1
 1144 00fa 13       		.uleb128 0x13
 1145 00fb 00       		.byte	0
 1146 00fc 00       		.byte	0
 1147 00fd 13       		.uleb128 0x13
 1148 00fe 898201   		.uleb128 0x4109
 1149 0101 00       		.byte	0
 1150 0102 11       		.uleb128 0x11
 1151 0103 01       		.uleb128 0x1
 1152 0104 31       		.uleb128 0x31
 1153 0105 13       		.uleb128 0x13
 1154 0106 00       		.byte	0
 1155 0107 00       		.byte	0
 1156 0108 14       		.uleb128 0x14
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 50


 1157 0109 2E       		.uleb128 0x2e
 1158 010a 01       		.byte	0x1
 1159 010b 03       		.uleb128 0x3
 1160 010c 0E       		.uleb128 0xe
 1161 010d 3A       		.uleb128 0x3a
 1162 010e 0B       		.uleb128 0xb
 1163 010f 3B       		.uleb128 0x3b
 1164 0110 05       		.uleb128 0x5
 1165 0111 27       		.uleb128 0x27
 1166 0112 19       		.uleb128 0x19
 1167 0113 20       		.uleb128 0x20
 1168 0114 0B       		.uleb128 0xb
 1169 0115 01       		.uleb128 0x1
 1170 0116 13       		.uleb128 0x13
 1171 0117 00       		.byte	0
 1172 0118 00       		.byte	0
 1173 0119 15       		.uleb128 0x15
 1174 011a 05       		.uleb128 0x5
 1175 011b 00       		.byte	0
 1176 011c 03       		.uleb128 0x3
 1177 011d 0E       		.uleb128 0xe
 1178 011e 3A       		.uleb128 0x3a
 1179 011f 0B       		.uleb128 0xb
 1180 0120 3B       		.uleb128 0x3b
 1181 0121 05       		.uleb128 0x5
 1182 0122 49       		.uleb128 0x49
 1183 0123 13       		.uleb128 0x13
 1184 0124 00       		.byte	0
 1185 0125 00       		.byte	0
 1186 0126 16       		.uleb128 0x16
 1187 0127 34       		.uleb128 0x34
 1188 0128 00       		.byte	0
 1189 0129 03       		.uleb128 0x3
 1190 012a 0E       		.uleb128 0xe
 1191 012b 3A       		.uleb128 0x3a
 1192 012c 0B       		.uleb128 0xb
 1193 012d 3B       		.uleb128 0x3b
 1194 012e 05       		.uleb128 0x5
 1195 012f 49       		.uleb128 0x49
 1196 0130 13       		.uleb128 0x13
 1197 0131 00       		.byte	0
 1198 0132 00       		.byte	0
 1199 0133 17       		.uleb128 0x17
 1200 0134 26       		.uleb128 0x26
 1201 0135 00       		.byte	0
 1202 0136 49       		.uleb128 0x49
 1203 0137 13       		.uleb128 0x13
 1204 0138 00       		.byte	0
 1205 0139 00       		.byte	0
 1206 013a 18       		.uleb128 0x18
 1207 013b 1D       		.uleb128 0x1d
 1208 013c 01       		.byte	0x1
 1209 013d 31       		.uleb128 0x31
 1210 013e 13       		.uleb128 0x13
 1211 013f 11       		.uleb128 0x11
 1212 0140 01       		.uleb128 0x1
 1213 0141 12       		.uleb128 0x12
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 51


 1214 0142 06       		.uleb128 0x6
 1215 0143 58       		.uleb128 0x58
 1216 0144 0B       		.uleb128 0xb
 1217 0145 59       		.uleb128 0x59
 1218 0146 05       		.uleb128 0x5
 1219 0147 00       		.byte	0
 1220 0148 00       		.byte	0
 1221 0149 19       		.uleb128 0x19
 1222 014a 05       		.uleb128 0x5
 1223 014b 00       		.byte	0
 1224 014c 31       		.uleb128 0x31
 1225 014d 13       		.uleb128 0x13
 1226 014e 02       		.uleb128 0x2
 1227 014f 17       		.uleb128 0x17
 1228 0150 00       		.byte	0
 1229 0151 00       		.byte	0
 1230 0152 1A       		.uleb128 0x1a
 1231 0153 0B       		.uleb128 0xb
 1232 0154 01       		.byte	0x1
 1233 0155 11       		.uleb128 0x11
 1234 0156 01       		.uleb128 0x1
 1235 0157 12       		.uleb128 0x12
 1236 0158 06       		.uleb128 0x6
 1237 0159 00       		.byte	0
 1238 015a 00       		.byte	0
 1239 015b 1B       		.uleb128 0x1b
 1240 015c 34       		.uleb128 0x34
 1241 015d 00       		.byte	0
 1242 015e 31       		.uleb128 0x31
 1243 015f 13       		.uleb128 0x13
 1244 0160 02       		.uleb128 0x2
 1245 0161 17       		.uleb128 0x17
 1246 0162 00       		.byte	0
 1247 0163 00       		.byte	0
 1248 0164 1C       		.uleb128 0x1c
 1249 0165 34       		.uleb128 0x34
 1250 0166 00       		.byte	0
 1251 0167 31       		.uleb128 0x31
 1252 0168 13       		.uleb128 0x13
 1253 0169 02       		.uleb128 0x2
 1254 016a 18       		.uleb128 0x18
 1255 016b 00       		.byte	0
 1256 016c 00       		.byte	0
 1257 016d 1D       		.uleb128 0x1d
 1258 016e 898201   		.uleb128 0x4109
 1259 0171 00       		.byte	0
 1260 0172 11       		.uleb128 0x11
 1261 0173 01       		.uleb128 0x1
 1262 0174 9342     		.uleb128 0x2113
 1263 0176 18       		.uleb128 0x18
 1264 0177 00       		.byte	0
 1265 0178 00       		.byte	0
 1266 0179 1E       		.uleb128 0x1e
 1267 017a 34       		.uleb128 0x34
 1268 017b 00       		.byte	0
 1269 017c 03       		.uleb128 0x3
 1270 017d 0E       		.uleb128 0xe
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 52


 1271 017e 3A       		.uleb128 0x3a
 1272 017f 0B       		.uleb128 0xb
 1273 0180 3B       		.uleb128 0x3b
 1274 0181 0B       		.uleb128 0xb
 1275 0182 49       		.uleb128 0x49
 1276 0183 13       		.uleb128 0x13
 1277 0184 3F       		.uleb128 0x3f
 1278 0185 19       		.uleb128 0x19
 1279 0186 3C       		.uleb128 0x3c
 1280 0187 19       		.uleb128 0x19
 1281 0188 00       		.byte	0
 1282 0189 00       		.byte	0
 1283 018a 1F       		.uleb128 0x1f
 1284 018b 2E       		.uleb128 0x2e
 1285 018c 00       		.byte	0
 1286 018d 3F       		.uleb128 0x3f
 1287 018e 19       		.uleb128 0x19
 1288 018f 03       		.uleb128 0x3
 1289 0190 0E       		.uleb128 0xe
 1290 0191 3A       		.uleb128 0x3a
 1291 0192 0B       		.uleb128 0xb
 1292 0193 3B       		.uleb128 0x3b
 1293 0194 0B       		.uleb128 0xb
 1294 0195 27       		.uleb128 0x27
 1295 0196 19       		.uleb128 0x19
 1296 0197 3C       		.uleb128 0x3c
 1297 0198 19       		.uleb128 0x19
 1298 0199 00       		.byte	0
 1299 019a 00       		.byte	0
 1300 019b 00       		.byte	0
 1301              		.section	.debug_loc,"",%progbits
 1302              	.Ldebug_loc0:
 1303              	.LLST0:
 1304 0000 06000000 		.4byte	.LVL1
 1305 0004 1C000000 		.4byte	.LVL3
 1306 0008 0100     		.2byte	0x1
 1307 000a 55       		.byte	0x55
 1308 000b 1C000000 		.4byte	.LVL3
 1309 000f 34000000 		.4byte	.LVL8
 1310 0013 0100     		.2byte	0x1
 1311 0015 54       		.byte	0x54
 1312 0016 00000000 		.4byte	0
 1313 001a 00000000 		.4byte	0
 1314              	.LLST1:
 1315 001e 06000000 		.4byte	.LVL1
 1316 0022 20000000 		.4byte	.LVL4
 1317 0026 0200     		.2byte	0x2
 1318 0028 30       		.byte	0x30
 1319 0029 9F       		.byte	0x9f
 1320 002a 20000000 		.4byte	.LVL4
 1321 002e 34000000 		.4byte	.LVL9
 1322 0032 0100     		.2byte	0x1
 1323 0034 55       		.byte	0x55
 1324 0035 00000000 		.4byte	0
 1325 0039 00000000 		.4byte	0
 1326              	.LLST2:
 1327 003d 06000000 		.4byte	.LVL10
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 53


 1328 0041 1C000000 		.4byte	.LVL12
 1329 0045 0100     		.2byte	0x1
 1330 0047 55       		.byte	0x55
 1331 0048 1C000000 		.4byte	.LVL12
 1332 004c 34000000 		.4byte	.LVL17
 1333 0050 0100     		.2byte	0x1
 1334 0052 54       		.byte	0x54
 1335 0053 00000000 		.4byte	0
 1336 0057 00000000 		.4byte	0
 1337              	.LLST3:
 1338 005b 06000000 		.4byte	.LVL10
 1339 005f 20000000 		.4byte	.LVL13
 1340 0063 0200     		.2byte	0x2
 1341 0065 30       		.byte	0x30
 1342 0066 9F       		.byte	0x9f
 1343 0067 20000000 		.4byte	.LVL13
 1344 006b 34000000 		.4byte	.LVL18
 1345 006f 0100     		.2byte	0x1
 1346 0071 55       		.byte	0x55
 1347 0072 00000000 		.4byte	0
 1348 0076 00000000 		.4byte	0
 1349              	.LLST4:
 1350 007a 06000000 		.4byte	.LVL19
 1351 007e 1C000000 		.4byte	.LVL21
 1352 0082 0100     		.2byte	0x1
 1353 0084 55       		.byte	0x55
 1354 0085 1C000000 		.4byte	.LVL21
 1355 0089 34000000 		.4byte	.LVL26
 1356 008d 0100     		.2byte	0x1
 1357 008f 54       		.byte	0x54
 1358 0090 00000000 		.4byte	0
 1359 0094 00000000 		.4byte	0
 1360              	.LLST5:
 1361 0098 06000000 		.4byte	.LVL19
 1362 009c 20000000 		.4byte	.LVL22
 1363 00a0 0200     		.2byte	0x2
 1364 00a2 30       		.byte	0x30
 1365 00a3 9F       		.byte	0x9f
 1366 00a4 20000000 		.4byte	.LVL22
 1367 00a8 34000000 		.4byte	.LVL27
 1368 00ac 0100     		.2byte	0x1
 1369 00ae 55       		.byte	0x55
 1370 00af 00000000 		.4byte	0
 1371 00b3 00000000 		.4byte	0
 1372              		.section	.debug_aranges,"",%progbits
 1373 0000 4C000000 		.4byte	0x4c
 1374 0004 0200     		.2byte	0x2
 1375 0006 00000000 		.4byte	.Ldebug_info0
 1376 000a 04       		.byte	0x4
 1377 000b 00       		.byte	0
 1378 000c 0000     		.2byte	0
 1379 000e 0000     		.2byte	0
 1380 0010 00000000 		.4byte	.LFB2
 1381 0014 34000000 		.4byte	.LFE2-.LFB2
 1382 0018 00000000 		.4byte	.LFB3
 1383 001c 38000000 		.4byte	.LFE3-.LFB3
 1384 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 54


 1385 0024 0C000000 		.4byte	.LFE4-.LFB4
 1386 0028 00000000 		.4byte	.LFB5
 1387 002c 14000000 		.4byte	.LFE5-.LFB5
 1388 0030 00000000 		.4byte	.LFB7
 1389 0034 40000000 		.4byte	.LFE7-.LFB7
 1390 0038 00000000 		.4byte	.LFB8
 1391 003c 40000000 		.4byte	.LFE8-.LFB8
 1392 0040 00000000 		.4byte	.LFB9
 1393 0044 40000000 		.4byte	.LFE9-.LFB9
 1394 0048 00000000 		.4byte	0
 1395 004c 00000000 		.4byte	0
 1396              		.section	.debug_ranges,"",%progbits
 1397              	.Ldebug_ranges0:
 1398 0000 00000000 		.4byte	.LFB2
 1399 0004 34000000 		.4byte	.LFE2
 1400 0008 00000000 		.4byte	.LFB3
 1401 000c 38000000 		.4byte	.LFE3
 1402 0010 00000000 		.4byte	.LFB4
 1403 0014 0C000000 		.4byte	.LFE4
 1404 0018 00000000 		.4byte	.LFB5
 1405 001c 14000000 		.4byte	.LFE5
 1406 0020 00000000 		.4byte	.LFB7
 1407 0024 40000000 		.4byte	.LFE7
 1408 0028 00000000 		.4byte	.LFB8
 1409 002c 40000000 		.4byte	.LFE8
 1410 0030 00000000 		.4byte	.LFB9
 1411 0034 40000000 		.4byte	.LFE9
 1412 0038 00000000 		.4byte	0
 1413 003c 00000000 		.4byte	0
 1414              		.section	.debug_line,"",%progbits
 1415              	.Ldebug_line0:
 1416 0000 43010000 		.section	.debug_str,"MS",%progbits,1
 1416      02006400 
 1416      00000201 
 1416      FB0E0D00 
 1416      01010101 
 1417              	.LASF41:
 1418 0000 55534246 		.ascii	"USBFS_INTR_MED_ISR\000"
 1418      535F494E 
 1418      54525F4D 
 1418      45445F49 
 1418      535200
 1419              	.LASF15:
 1420 0013 72656733 		.ascii	"reg32\000"
 1420      3200
 1421              	.LASF45:
 1422 0019 433A5C55 		.ascii	"C:\\Users\\Javier Barragan\\Documents\\PSoC Creator"
 1422      73657273 
 1422      5C4A6176 
 1422      69657220 
 1422      42617272 
 1423 0048 5C435938 		.ascii	"\\CY8CKIT_046_USB_Mouse\\CY8CKIT_046_USB_Mouse.cyds"
 1423      434B4954 
 1423      5F303436 
 1423      5F555342 
 1423      5F4D6F75 
 1424 0079 6E00     		.ascii	"n\000"
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 55


 1425              	.LASF49:
 1426 007b 55534246 		.ascii	"USBFS_ReInitComponent\000"
 1426      535F5265 
 1426      496E6974 
 1426      436F6D70 
 1426      6F6E656E 
 1427              	.LASF30:
 1428 0091 65704372 		.ascii	"epCr0\000"
 1428      3000
 1429              	.LASF12:
 1430 0097 666C6F61 		.ascii	"float\000"
 1430      7400
 1431              	.LASF3:
 1432 009d 73686F72 		.ascii	"short unsigned int\000"
 1432      7420756E 
 1432      7369676E 
 1432      65642069 
 1432      6E7400
 1433              	.LASF27:
 1434 00b0 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1434      4246535F 
 1434      45505F43 
 1434      544C5F42 
 1434      4C4F434B 
 1435              	.LASF39:
 1436 00c5 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1436      535F4255 
 1436      535F5245 
 1436      5345545F 
 1436      49535200 
 1437              	.LASF28:
 1438 00d9 6570436E 		.ascii	"epCnt0\000"
 1438      743000
 1439              	.LASF29:
 1440 00e0 6570436E 		.ascii	"epCnt1\000"
 1440      743100
 1441              	.LASF44:
 1442 00e7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\USBFS_episr.c\000"
 1442      6E657261 
 1442      7465645F 
 1442      536F7572 
 1442      63655C50 
 1443              	.LASF21:
 1444 010e 6570546F 		.ascii	"epToggle\000"
 1444      67676C65 
 1444      00
 1445              	.LASF1:
 1446 0117 756E7369 		.ascii	"unsigned char\000"
 1446      676E6564 
 1446      20636861 
 1446      7200
 1447              	.LASF19:
 1448 0125 61706945 		.ascii	"apiEpState\000"
 1448      70537461 
 1448      746500
 1449              	.LASF5:
 1450 0130 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 56


 1450      20756E73 
 1450      69676E65 
 1450      6420696E 
 1450      7400
 1451              	.LASF22:
 1452 0142 61646472 		.ascii	"addr\000"
 1452      00
 1453              	.LASF36:
 1454 0147 55534246 		.ascii	"USBFS_SOF_ISR\000"
 1454      535F534F 
 1454      465F4953 
 1454      5200
 1455              	.LASF32:
 1456 0155 73696545 		.ascii	"sieEp\000"
 1456      7000
 1457              	.LASF48:
 1458 015b 55534246 		.ascii	"USBFS_EP\000"
 1458      535F4550 
 1458      00
 1459              	.LASF46:
 1460 0164 55534246 		.ascii	"USBFS_IntrHandler\000"
 1460      535F496E 
 1460      74724861 
 1460      6E646C65 
 1460      7200
 1461              	.LASF13:
 1462 0176 646F7562 		.ascii	"double\000"
 1462      6C6500
 1463              	.LASF31:
 1464 017d 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1464      535F7369 
 1464      655F6570 
 1464      5F737472 
 1464      75637400 
 1465              	.LASF24:
 1466 0191 62756666 		.ascii	"buffOffset\000"
 1466      4F666673 
 1466      657400
 1467              	.LASF34:
 1468 019c 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1468      535F4550 
 1468      5F315F49 
 1468      535200
 1469              	.LASF10:
 1470 01ab 75696E74 		.ascii	"uint16\000"
 1470      313600
 1471              	.LASF33:
 1472 01b2 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1472      535F7369 
 1472      655F6570 
 1472      735F7374 
 1472      72756374 
 1473              	.LASF11:
 1474 01c7 75696E74 		.ascii	"uint32\000"
 1474      333200
 1475              	.LASF8:
 1476 01ce 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 57


 1476      676E6564 
 1476      20696E74 
 1476      00
 1477              	.LASF37:
 1478 01db 55534246 		.ascii	"USBFS_isrCallbacks\000"
 1478      535F6973 
 1478      7243616C 
 1478      6C626163 
 1478      6B7300
 1479              	.LASF7:
 1480 01ee 6C6F6E67 		.ascii	"long long unsigned int\000"
 1480      206C6F6E 
 1480      6720756E 
 1480      7369676E 
 1480      65642069 
 1481              	.LASF16:
 1482 0205 63796973 		.ascii	"cyisraddress\000"
 1482      72616464 
 1482      72657373 
 1482      00
 1483              	.LASF20:
 1484 0212 68774570 		.ascii	"hwEpState\000"
 1484      53746174 
 1484      6500
 1485              	.LASF40:
 1486 021c 55534246 		.ascii	"USBFS_INTR_HI_ISR\000"
 1486      535F494E 
 1486      54525F48 
 1486      495F4953 
 1486      5200
 1487              	.LASF17:
 1488 022e 73697A65 		.ascii	"sizetype\000"
 1488      74797065 
 1488      00
 1489              	.LASF18:
 1490 0237 61747472 		.ascii	"attrib\000"
 1490      696200
 1491              	.LASF23:
 1492 023e 65704D6F 		.ascii	"epMode\000"
 1492      646500
 1493              	.LASF6:
 1494 0245 6C6F6E67 		.ascii	"long long int\000"
 1494      206C6F6E 
 1494      6720696E 
 1494      7400
 1495              	.LASF14:
 1496 0253 63686172 		.ascii	"char\000"
 1496      00
 1497              	.LASF42:
 1498 0258 55534246 		.ascii	"USBFS_INTR_LO_ISR\000"
 1498      535F494E 
 1498      54525F4C 
 1498      4F5F4953 
 1498      5200
 1499              	.LASF43:
 1500 026a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1500      4320342E 
ARM GAS  C:\Users\JAVIER~1\AppData\Local\Temp\cc6rmTxr.s 			page 58


 1500      392E3320 
 1500      32303135 
 1500      30333033 
 1501 029d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1501      20726576 
 1501      6973696F 
 1501      6E203232 
 1501      31323230 
 1502 02d0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1502      66756E63 
 1502      74696F6E 
 1502      2D736563 
 1502      74696F6E 
 1503              	.LASF25:
 1504 02f8 62756666 		.ascii	"bufferSize\000"
 1504      65725369 
 1504      7A6500
 1505              	.LASF2:
 1506 0303 73686F72 		.ascii	"short int\000"
 1506      7420696E 
 1506      7400
 1507              	.LASF9:
 1508 030d 75696E74 		.ascii	"uint8\000"
 1508      3800
 1509              	.LASF26:
 1510 0313 696E7465 		.ascii	"interface\000"
 1510      72666163 
 1510      6500
 1511              	.LASF38:
 1512 031d 63624964 		.ascii	"cbIdx\000"
 1512      7800
 1513              	.LASF4:
 1514 0323 6C6F6E67 		.ascii	"long int\000"
 1514      20696E74 
 1514      00
 1515              	.LASF47:
 1516 032c 696E7472 		.ascii	"intrCause\000"
 1516      43617573 
 1516      6500
 1517              	.LASF35:
 1518 0336 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1518      535F4550 
 1518      5F325F49 
 1518      535200
 1519              	.LASF0:
 1520 0345 7369676E 		.ascii	"signed char\000"
 1520      65642063 
 1520      68617200 
 1521              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
